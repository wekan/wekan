name: Deploy testing environment to EC2

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      wekan_image_tag: ${{ steps.docker_image_build.outputs.tag }}

    steps:
      - name: Checkout repository(omriza5/wekan)
        uses: actions/checkout@v4

      - name: Build and push docker image
        id: docker_image_build
        run: |
          # Login to DockerHub
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

          # Use short commit SHA (first 7 characters)
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          TAG="${SHORT_SHA}-$(date +%Y%m%d-%H%M%S)"
          echo "tag=$TAG" >> $GITHUB_OUTPUT

          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/wekan:$TAG .

          docker push ${{ secrets.DOCKERHUB_USERNAME }}/wekan:$TAG

          # Save the tag for later steps
          echo "WEKAN_IMAGE_TAG=$TAG" >> $GITHUB_ENV

      - name: Copy docker-compose file to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.WEKAN_EC2_HOST_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "docker-compose.yml"
          target: "/home/ubuntu/"

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.WEKAN_EC2_HOST_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Stop and remove old containers
            sudo docker compose down || true
            sudo docker stop $(docker ps -aq) 2>/dev/null || true
            sudo docker rm $(docker ps -aq) 2>/dev/null || true

            # Remove all images to free space
            sudo docker rmi $(docker images -q) 2>/dev/null || true

            # Clean up dangling volumes and networks
            sudo docker volume prune -f || true
            sudo docker network prune -f || true
            sudo docker system prune -f || true

            echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

            sudo docker compose pull
            sudo docker compose up -d

  API-tests:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Add test user to EC2 MongoDB
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.WEKAN_EC2_HOST_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo docker exec wekan-db mongosh wekan --eval '
              db.users.updateOne(
                { username: "omriza5" },
                {
                  $setOnInsert: {
                    username: "omriza5",
                    password: "123456",
                    email: "omriza5@gmail.com",
                    isAdmin: false
                  }
                },
                { upsert: true }
              )
            '

      - name: Run API tests
        env:
          BASE_URL: ${{ secrets.WEKAN_URL }}
        run: |
          pytest --maxfail=5 --disable-warnings -v

